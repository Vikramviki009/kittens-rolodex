{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","props","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","data","catch","err","console","error","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAClB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAK,WAAWC,IAAG,+BAA4BH,EAAQI,GAApC,4BACxB,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCJXC,EAAW,SAAEC,GACtB,OAAO,qBAAKP,UAAU,YAAf,SAECO,EAAMC,SAASC,KAAI,SAAAV,GAAO,OAAI,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQI,UCJlDO,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACAZ,UAAW,SACXa,KAAO,SACPF,YAAeA,EACfG,SAAYF,MCkCDG,E,kDApCb,aAAc,IAAD,8BACX,gBAeFH,aAAe,SAAAI,GAAC,OAAI,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbxD,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALJ,E,qDASb,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAI,EAAKT,SAAS,CAAET,SAAUkB,OACvCC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,Q,oBAK9B,WACE,MAAkCG,KAAKV,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZc,EAAmBxB,EAASyB,QAAQ,SAAAlC,GAAO,OAC/CA,EAAQK,KAAK8B,cAAcC,SAASjB,EAAYgB,kBAElD,OACE,sBAAKlC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACAW,YAAc,kBACdC,aAAgBmB,KAAKnB,eAErB,cAAC,EAAD,CAAUJ,SAAYwB,W,GA/BZI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1BZ,M","file":"static/js/main.6f637971.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = ({monster}) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt= \"monsters\" src = {`https://robohash.org/${monster.id}?set=set4&size=180x180`} />\r\n            <h2>{monster.name}</h2>\r\n            <p>{monster.email}</p>\r\n        </div>\r\n    )\r\n}                  ","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = ( props ) => {\r\n    return <div className='card-list'>\r\n        {\r\n            props.monsters.map(monster => <Card key = {monster.id} monster = {monster} />)\r\n        }\r\n    </div>\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange}) => (\r\n    <input\r\n    className= 'search' \r\n    type = 'search' \r\n    placeholder = {placeholder} \r\n    onChange = {handleChange} \r\n    />\r\n)","import React, { Component } from 'react'; \nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    }\n  };\n\n  componentDidMount() {\n    fetch(`https://jsonplaceholder.typicode.com/users`)\n    .then(res => res.json())\n    .then(data => this.setState({ monsters: data}))\n    .catch(err => console.error(err))\n  }\n\n  handleChange = e => this.setState({ searchField: e.target.value });\n  \n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter( monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <h1>Kittens Rolodex</h1>\n        <SearchBox \n        placeholder = 'Search Monsters'\n        handleChange = {this.handleChange}\n        />\n        <CardList monsters = {filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}